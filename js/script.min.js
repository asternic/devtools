$(document).ready(function(){

    $('#encode').click(function(){
         encoded = Base64.encode($('#base64').val());
         $('#base64result').val(encoded);
    });

    $('#decode').click(function(){
         decoded = Base64.decode($('#base64').val());
         $('#base64result').val(decoded);
    });

    $('#resetdecode').click(function(){
         $('#base64').val('');
    });

    var code=$(".codemirror-textarea")[0];
    var editor=CodeMirror.fromTextArea(code,{
        lineNumbers: true,
        lineWrapping: true,
        styleActiveLine: true,
        styleActiveSelected: true,
        mode: 'application/json',
        gutters: ["CodeMirror-lint-markers"],
        lint:true
        
    });
    $json="";
    $('#validate').click(function(){
        try {
        $json=editor.getValue();
        if(IsURL($json.toString())){
            $.getJSON($json.toString(),{},function(data,status){
                if(status=="success"){
                $dat=JSON.stringify(data);
                var jsonPretty = JSON.stringify(data,null,2);  
                editor.setValue(jsonPretty);
                $djson=JSON.parse($dat);
                $('#error').show();
                $('#error').removeClass("alert-danger");
                $('#error').addClass("alert-success");
                $("#error").empty().append("Valid Json");
                }
                else{
                    alert("Noting Found on URL");
                }
                
                 
            });
        }else{
            $djson=$json.toString();
            $djson=jsonlint.parse($djson);

            $dat=JSON.stringify($djson);
            var jsonPretty = JSON.stringify($djson,null,2);  
            editor.setValue(jsonPretty);
            $('#error').show();
            $('#error').removeClass("alert-danger");
            $('#error').addClass("alert-success");
            $("#error").empty().append("Valid Json"); 
        }       
        }
        catch(err) {
            var lineNumber=err;
            var regex = /[+-]?\d+(?:\.\d+)?/g;
            var str = lineNumber.toString();
            var lin;
            var match;
             while (match = regex.exec(str)) {
                 lin=match[0];
                    console.log(match[0]);
                    break;
                }
                $( ".CodeMirror-line:eq("+(lin-1)+")" ).css( "background-color", "#f8d7da");
                $('#error').show();
                $('#error').removeClass("alert-success");
                $('#error').addClass("alert-danger");
                 $("#error").empty().append(err);
            }
    })
    $('#reset').click(function(){
        editor.setValue('');
        $('#error').hide();
    })
    function IsURL(str) {
        var regex = /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/;
        if(regex .test(str)) {
            return true;
        } else {
          return false;
          
        }
      }


    
})

function convert(){

 // Unixtimestamp
 var unixtimestamp = document.getElementById('timestamp').value;

 // Months array
 var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];

 // Convert timestamp to milliseconds
 var date = new Date(unixtimestamp*1000);

 // Year
 var year = date.getFullYear();

 // Month
 var month = months_arr[date.getMonth()];

 // Day
 var day = date.getDate();

 // Hours
 var hours = date.getHours();

 // Minutes
 var minutes = "0" + date.getMinutes();

 // Seconds
 var seconds = "0" + date.getSeconds();

 // Display date time in MM-dd-yyyy h:m:s format
 var convdataTime = month+'-'+day+'-'+year+' '+hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
 
 document.getElementById('datetime').innerHTML = convdataTime;
 return false; 
}

