var editor;
var editordns;
var hash;

$(document).ready(function() {

    $('#encode').click(function(){
         encoded = Base64.encode($('#base64').val());
         $('#base64result').val(encoded);
    });

    $('#decode').click(function(){
         decoded = Base64.decode($('#base64').val());
         $('#base64result').val(decoded);
    });

    $('#resetdecode').click(function(){
         $('#base64').val('');
         $('#base64result').val('');
    });

    $('.copy').click(function() {
        var field = $(this).attr('id').substr(5);
        var text = $('#'+field).val();
        copyTextToClipboard(text);
    });

    $('#genpass').click(function() {
        $('#password').val(generatePassword($('#pwdLength').val(),$('#pwdMemorable').is(':checked'),$('#pwdPattern').val(),$('#pwdPrefix').val()));
    });

    var code=$("#jsoncode")[0];
    var codedns=$("#dnsresult")[0];

    editor=CodeMirror.fromTextArea(code,{
        lineNumbers: true,
        lineWrapping: true,
        styleActiveLine: true,
        styleActiveSelected: true,
        mode: 'application/json',
        gutters: ["CodeMirror-lint-markers"],
        lint:true
    });

    editordns=CodeMirror.fromTextArea(codedns,{
        lineNumbers: true,
        lineWrapping: true,
        styleActiveLine: true,
        styleActiveSelected: true,
        mode: 'application/json',
        gutters: ["CodeMirror-lint-markers"],
        lint:true
    });

    editor.setSize('100%', 600);
    editordns.setSize('100%', 600);

    $json="";
    $('#validate').click(function() {
        try {
            $json=editor.getValue();
            if(IsURL($json.toString())){
                $.getJSON($json.toString(),{},function(data,status){
                    if(status=="success"){
                        $dat=JSON.stringify(data);
                        var jsonPretty = JSON.stringify(data,null,2);
                        editor.setValue(jsonPretty);
                        $djson=JSON.parse($dat);
                        $('#error').show();
                        $('#error').removeClass("alert-danger");
                        $('#error').addClass("alert-success");
                        $("#error").empty().append("Valid Json");
                    } else{
                        alert("Noting Found on URL");
                    }
                });
            }else{
                $djson=$json.toString();
                $djson=jsonlint.parse($djson);
                $dat=JSON.stringify($djson);
                var jsonPretty = JSON.stringify($djson,null,2);
                editor.setValue(jsonPretty);
                $('#error').show();
                $('#error').removeClass("alert-danger");
                $('#error').addClass("alert-success");
                $("#error").empty().append("Valid Json");
            }
        }
        catch(err) {
            var lineNumber=err;
            var regex = /[+-]?\d+(?:\.\d+)?/g;
            var str = lineNumber.toString();
            var lin;
            var match;
            while (match = regex.exec(str)) {
                 lin=match[0];
                 console.log(match[0]);
                 break;
            }
            $( ".CodeMirror-line:eq("+(lin-1)+")" ).css( "background-color", "#f8d7da");
            $('#error').show();
            $('#error').removeClass("alert-success");
            $('#error').addClass("alert-danger");
            $("#error").empty().append(err);
        }
    });

    $('#reset').click(function(){
        editor.setValue('');
        $('#error').hide();
    })

    function IsURL(str) {
        var regex = /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/;
        if(regex .test(str)) {
            return true;
        } else {
            return false;
        }
    }

    $('#password').val(generatePassword($('#pwdLength').val(),$('#pwdMemorable').is(':checked'),$('#pwdPattern').val(),$('#pwdPrefix').val()));

    hash = window.location.href.substring(window.location.href.indexOf('#')+1);
    if(hash!="") {
        $('[href="#'+hash+'"]').tab('show');
    }

    return false;
});

function dnsquery() {
   host = document.getElementById('dnshost').value;
   $('#dnsloading').removeClass('d-none');
   $('#dnsbuttontext').text('Please Wait');
   $.get('https://dns.google/resolve?name='+host, function(result,status,xhr) {
       $('#dnsloading').addClass('d-none');
       $('#dnsbuttontext').text('Submit');
       editordns.setValue(result);
       $json=editordns.getValue();
       $djson=$json.toString();
       $djson=jsonlint.parse($djson);
       $dat=JSON.stringify($djson);
       var jsonPretty = JSON.stringify($djson,null,2);
       editordns.setValue(jsonPretty);
    });
   return false;
}


function convert(){
   // Unixtimestamp
   var unixtimestamp = document.getElementById('timestamp').value;

   // Months array
   var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];

   // Convert timestamp to milliseconds
   var date = new Date(unixtimestamp*1000);

   // Year
   var year = date.getFullYear();

   // Month
   var month = months_arr[date.getMonth()];

   // Day
   var day = date.getDate();

   // Hours
   var hours = pad(date.getHours(),2);

   // Minutes
   var minutes = "0" + pad(date.getMinutes(),2);

   // Seconds
   var seconds = "0" + pad(date.getSeconds(),2);

   // Display date time in MM-dd-yyyy h:m:s format
   var convdataTime = month+' '+day+', '+year+' '+hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);

   document.getElementById('datetime').innerHTML = convdataTime;
   return false;
}

function pad(n, width, z) {
    z = z || '0';
    n = n + '';
    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
}

function fallbackCopyTextToClipboard(text) {
    var textArea = document.createElement("textarea");
    textArea.value = text;

    // Avoid scrolling to bottom
    textArea.style.top = "0";
    textArea.style.left = "0";
    textArea.style.position = "fixed";

    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();

    try {
        var successful = document.execCommand('copy');
        var msg = successful ? 'successful' : 'unsuccessful';
        console.log('Fallback: Copying text command was ' + msg);
    } catch (err) {
        console.error('Fallback: Oops, unable to copy', err);
    }

    document.body.removeChild(textArea);
}

function copyTextToClipboard(text) {
    if (!navigator.clipboard) {
        fallbackCopyTextToClipboard(text);
        return;
    }
    navigator.clipboard.writeText(text).then(function() {
        console.log('Async: Copying to clipboard was successful!');
    }, function(err) {
        console.error('Async: Could not copy text: ', err);
    });
}

